const sql = require('mssql');

const config = {
    server: 'localhost',
    database: 'SMOKEKING',
    options: {
        encrypt: false,
        trustServerCertificate: true
    },
    authentication: {
        type: 'ntlm',
        options: {
            domain: '',
            userName: '',
            password: ''
        }
    }
};

async function updateAchievements() {
    try {
        console.log('üîÑ Connecting to database...');
        const pool = await sql.connect(config);

        // Update achievements to use emojis instead of image paths
        const updates = [
            { id: 1, emoji: 'üèÜ', name: 'Ng√†y ƒë·∫ßu ti√™n' },
            { id: 2, emoji: '‚≠ê', name: 'Tu·∫ßn l·ªÖ kh·ªüi ƒë·∫ßu' },
            { id: 3, emoji: 'üëë', name: 'Th√°ng ƒë·∫ßu ti√™n' },
            { id: 4, emoji: 'üíé', name: 'Qu√Ω ƒë·∫ßu ti√™n' },
            { id: 5, emoji: 'üí∞', name: 'Ti·∫øt ki·ªám 100K' },
            { id: 6, emoji: 'üíµ', name: 'Ti·∫øt ki·ªám 500K' },
            { id: 7, emoji: 'ü§ë', name: 'Ti·∫øt ki·ªám 1 tri·ªáu' }
        ];

        console.log('üîÑ Updating achievements to use emoji icons...');

        for (const update of updates) {
            await pool.request()
                .input('id', sql.Int, update.id)
                .input('emoji', sql.NVarChar, update.emoji)
                .query('UPDATE Achievements SET IconURL = @emoji WHERE AchievementID = @id');
            console.log(`‚úÖ Updated "${update.name}" (ID: ${update.id}) to emoji: ${update.emoji}`);
        }

        console.log('\nüéâ All achievements updated successfully!');

        // Verify the updates
        const result = await pool.request().query('SELECT AchievementID, Name, IconURL FROM Achievements ORDER BY AchievementID');
        console.log('\nüìã Current achievements:');
        result.recordset.forEach(row => {
            console.log(`   ${row.AchievementID}. ${row.Name}: ${row.IconURL}`);
        });

        await pool.close();
        console.log('\n‚ú® Database connection closed. Update complete!');

    } catch (error) {
        console.error('‚ùå Error updating achievements:', error.message);
        process.exit(1);
    }
}

updateAchievements(); 