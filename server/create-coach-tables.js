const { pool } = require('./src/config/database');

async function createCoachTables() {
    try {
        // Connect to database first
        await pool.connect();
        console.log('üîß Creating CoachProfiles table...');

        // Create CoachProfiles table
        await pool.request().query(`
            IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CoachProfiles')
            BEGIN
                CREATE TABLE CoachProfiles (
                    ProfileID INT IDENTITY(1,1) PRIMARY KEY,
                    UserID INT NOT NULL,
                    Bio NVARCHAR(MAX),
                    Specialization NVARCHAR(500),
                    Experience INT,
                    HourlyRate DECIMAL(10,2),
                    IsAvailable BIT DEFAULT 1,
                    CreatedAt DATETIME DEFAULT GETDATE(),
                    UpdatedAt DATETIME DEFAULT GETDATE(),
                    
                    FOREIGN KEY (UserID) REFERENCES Users(UserID)
                )
            END
        `);

        console.log('‚úÖ CoachProfiles table created');

        // Create CoachReviews table
        await pool.request().query(`
            IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CoachReviews')
            BEGIN
                CREATE TABLE CoachReviews (
                    ReviewID INT IDENTITY(1,1) PRIMARY KEY,
                    CoachUserID INT NOT NULL,
                    ClientUserID INT NULL,
                    ClientName NVARCHAR(255),
                    ReviewTitle NVARCHAR(255),
                    ReviewContent NVARCHAR(MAX),
                    Rating INT CHECK (Rating BETWEEN 1 AND 5),
                    IsAnonymous BIT DEFAULT 0,
                    IsPublic BIT DEFAULT 1,
                    CreatedAt DATETIME DEFAULT GETDATE(),

                    FOREIGN KEY (CoachUserID) REFERENCES Users(UserID),
                    FOREIGN KEY (ClientUserID) REFERENCES Users(UserID)
                )
            END
        `);

        console.log('‚úÖ CoachReviews table created');

        // Insert sample coach profile
        const coachResult = await pool.request().query(`
            SELECT UserID FROM Users WHERE Email = 'coach@example.com' AND Role = 'coach'
        `);

        if (coachResult.recordset.length > 0) {
            const coachId = coachResult.recordset[0].UserID;

            // Check if profile exists
            const existingProfile = await pool.request()
                .input('UserID', coachId)
                .query(`SELECT ProfileID FROM CoachProfiles WHERE UserID = @UserID`);

            if (existingProfile.recordset.length === 0) {
                await pool.request()
                    .input('UserID', coachId)
                    .query(`
                        INSERT INTO CoachProfiles (UserID, Bio, Specialization, Experience, HourlyRate, IsAvailable)
                        VALUES (@UserID, 
                            N'Chuy√™n gia t∆∞ v·∫•n cai thu·ªëc l√° v·ªõi h∆°n 5 nƒÉm kinh nghi·ªám. T√¥i ƒë√£ gi√∫p h√†ng trƒÉm ng∆∞·ªùi th√†nh c√¥ng trong vi·ªác cai thu·ªëc.',
                            N'Cai thu·ªëc l√°, T∆∞ v·∫•n nghi·ªán, Li·ªáu ph√°p h√†nh vi',
                            5,
                            200000,
                            1)
                    `);

                console.log('‚úÖ Sample coach profile created');

                // Add some sample reviews
                await pool.request()
                    .input('CoachUserID', coachId)
                    .query(`
                        INSERT INTO CoachReviews (CoachUserID, ClientName, ReviewTitle, ReviewContent, Rating, IsAnonymous, IsPublic)
                        VALUES 
                        (@CoachUserID, N'Nguy·ªÖn VƒÉn A', N'Coach r·∫•t t·∫≠n t√¢m', N'Coach ƒë√£ gi√∫p t√¥i cai thu·ªëc th√†nh c√¥ng sau 3 th√°ng. R·∫•t c·∫£m ∆°n!', 5, 0, 1),
                        (@CoachUserID, N'Tr·∫ßn Th·ªã B', N'Ph∆∞∆°ng ph√°p hi·ªáu qu·∫£', N'Ph∆∞∆°ng ph√°p c·ªßa coach r·∫•t khoa h·ªçc v√† d·ªÖ th·ª±c hi·ªán.', 4, 0, 1),
                        (@CoachUserID, N'L√™ VƒÉn C', N'H·ªó tr·ª£ tuy·ªát v·ªùi', N'Coach lu√¥n s·∫µn s√†ng h·ªó tr·ª£ v√† ƒë·ªông vi√™n khi t√¥i g·∫∑p kh√≥ khƒÉn.', 5, 0, 1)
                    `);

                console.log('‚úÖ Sample reviews created');
            } else {
                console.log('‚ÑπÔ∏è Coach profile already exists');
            }
        }

        console.log('üéâ All done!');

    } catch (error) {
        console.error('‚ùå Error:', error);
    } finally {
        await pool.close();
        process.exit(0);
    }
}

createCoachTables(); 